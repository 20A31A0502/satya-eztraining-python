#LAMBDA Function:
it is called as anonymous function.when we want to use function concept alone without using function name then we apply concept of lambda function

program:
write a program after creating a list with even numbers within the range 1 to 15,now apply lambda function and create a new list with should have square roots of the elements
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#FOUR PILLARS OF OOPS:
1.ABSTRACTION-hidding the implementation part showing what is required for the users is called as "Abstraction"
EX: "exe file"
we can make class or method as abstract,opposite to abstract is concrete which means we can see what is present inside

2.ENCAPSULATION-Binding data and function into a single entity
public->one class info can be accessed by any other class(low level data protection)
private->can used where it is declared /no in inherited class(l level data protection)
protected->can be accessed only where it got declared__whichever class inherited from this class there also we can use(high level data protection)

3.INHERITANCE-Base class(main class) and Derived class
      derived class inherit properties of base class
Base class:parent class
Derived class:Child class

TYPES OF INHERITANCE:
1.SINGLE INHERITANCE
EXAMPLE:
#one parent and one child class
class parent:       #base class
    def display(self):
        print("parent class")
#derived class
class child(parent):
    def show(self):
        print("child class")
c=child()     #c is object of child class
c.display()
c.show()
output:
parent class
child class

EXAMPLE-2 PROGRAM:
class A:
    n=50
class B(A):
    def calc(self):
        c=self.n+50
        print(c)
obj=B()
obj.calc()
output:
100
 
2.MULTIPLE INHERITANCE

3.MULTILEVEL INHERITANCE

4.HEIRARCHICAL INHERITANCE

5.HYBRID INHERITANCE

#program:
print whether the given number is happy number are not

4.POLYMORPHISM:
one item or same item used for different purpose

TYPES:
->overloading-a.operator overloading:Operator Overloading means giving extended meaning beyond their predefined operational meaning. For example operator + is used to add two integers as well as join two strings and merge two lists. It is achievable because ‘+’ operator is overloaded by int class and str class. You might have noticed that the same built-in operator or function shows different behavior for objects of different classes, this is called Operator Overloading. 
Example:
1+2=3 integers
"1"+"2"=12 string Concatenation
              b.method overloading:Two or more methods have the same name but different  numbers of parameters or different types of parameters, or both. These methods are called overloaded methods and this is called method overloading.  
Example:
add(1,2)
add(a,b)#here the method is same but different types of parameters

->overridding:If a method is defective or cannot be used inside derived class it will take it from its base class or parent class
