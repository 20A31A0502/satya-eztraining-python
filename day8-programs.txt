-----------------------------------DATA STRUCTURES-------------------------------------
#CREATING NODE-Declaration & definition
class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class singlelinkedlist:
    def __init__(self):
        self.head=None
    def display(self):
        if self.head is None:
            print("Linked list is empty")
        else:
            temp=self.head #temp=first node
            while temp:
                print(temp.data,"->",end="  ")
                #temp.data means first node's data
                temp=temp.next #establishing link
obj=singlelinkedlist()
#node creation-initializing
n=Node(10)#so n.data in Node class will be 10
obj.head=n #assigning first node  as head
n1=Node(20)
obj.head.next=n1 #next node value
n2=Node(30)
n1.next=n2
obj.display()
OUTPUT:
10 ->  20 ->  30 ->

example-2:[WINNER]

class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class linkedlist:
    def __init__(self):
        self.head=None
    def display(self):
        if self.head is None:
            print("Linked list is empty")
        else:
            temp=self.head 
            while temp:
                print(temp.data,"->",end="  ")
                temp=temp.next
obj=linkedlist()
n=Node('w')
obj.head=n
n1=Node('i')
obj.head.next=n1
n2=Node('n')
n1.next=n2
n3=Node('n')
n2.next=n3
n4=Node('e')
n3.next=n4
n5=Node('r')
n4.next=n5
obj.display()

OUTPUT:
w ->  i ->  n ->  n ->  e ->  r ->  

#INSERTING AT THE BEGINING PROGRAM:
class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class singlelinkedlist:
    def __init__(self):
        self.head=None
    def insert_begining(self,data):
        nb=Node(data)
        nb.next=self.head
        self.head=nb
    def display(self):
        if self.head is None:
            print("Linked list is empty")
        else:
            temp=self.head 
            while temp:
                print(temp.data,"->",end="  ")
                temp=temp.next
obj=singlelinkedlist()
n=Node(10)
obj.head=n
n1=Node(20)
n.next=n1
n2=Node(30)
n1.next=n2
n3=Node(40)
n2.next=n3
n4=Node(50)
n3.next=n4
print("Before Inserting 100")
obj.display()
print(" ")
print("After Inserting 100")
obj.insert_begining(100)
obj.display()
print(" ")
print("After inserting 555")
obj.insert_begining(555)
obj.display()
OUTPUT:
Before Inserting 100
10 ->  20 ->  30 ->  40 ->  50 ->   
After Inserting 100
100 ->  10 ->  20 ->  30 ->  40 ->  50 ->   
After inserting 555
555 ->  100 ->  10 ->  20 ->  30 ->  40 ->  50 -> 

#INSERTING AT THE ENDING:
class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class singlelinkedlist:
    def __init__(self):
        self.head=None
    def insert_end(self,data):
        ne=Node(data)
        temp=self.head
        while temp.next:
            temp=temp.next
        temp.next=ne
    def display(self):
        if self.head is None:
            print("Linked list is empty")
        else:
            temp=self.head 
            while temp:
                print(temp.data,"->",end="  ")
                temp=temp.next
obj=singlelinkedlist()
n=Node(10)
obj.head=n
n1=Node(20)
n.next=n1
n2=Node(30)
n1.next=n2
n3=Node(40)
n2.next=n3 
n4=Node(50)
n3.next=n4
print("Before inserting at end 100")
obj.display()
obj.insert_end(100)
print(" ")
print("After inserting at end 100")
obj.display()
OUTPUT:
Before inserting at end 100
10 ->  20 ->  30 ->  40 ->  50 ->   
After inserting at end 100
10 ->  20 ->  30 ->  40 ->  50 ->  100 ->  

#INSERTING AT THE SPECIFIC POSITION:
class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class singlelinkedlist:
    def __init__(self):
        self.head=None
    def insert_position(self,pos,data):
        np=Node(data)
        temp=self.head
        for i in range(pos-1):
            temp=temp.next
        np.next=temp.next
        temp.next=np
    def display(self):
        if self.head is None:
            print("Linked list is empty")
        else:
            temp=self.head 
            while temp:
                print(temp.data,"->",end="  ")
                temp=temp.next
obj=singlelinkedlist()
n=Node(10)
obj.head=n
n1=Node(20)
n.next=n1
n2=Node(30)
n1.next=n2
n3=Node(40)
n2.next=n3
n4=Node(50)
n3.next=n4
print("Before inserting at the position")
obj.display()
obj.insert_position(2,100)
print(" ")
print("After inserting at the position")
obj.display()
OUTPUT:
Before inserting at the position
10 ->  20 ->  30 ->  40 ->  50 ->   
After inserting at the position
10 ->  20 ->  100 ->  30 ->  40 ->  50 ->  