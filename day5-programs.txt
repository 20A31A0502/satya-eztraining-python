#Calendar module
import calendar
print("Full calendar:")
print(calendar.calendar(2023))
OUTPUT:
full calendar
                                  2023

      January                   February                   March
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
                   1             1  2  3  4  5             1  2  3  4  5
 2  3  4  5  6  7  8       6  7  8  9 10 11 12       6  7  8  9 10 11 12
 9 10 11 12 13 14 15      13 14 15 16 17 18 19      13 14 15 16 17 18 19
16 17 18 19 20 21 22      20 21 22 23 24 25 26      20 21 22 23 24 25 26
23 24 25 26 27 28 29      27 28                     27 28 29 30 31
30 31

       April                      May                       June
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
                1  2       1  2  3  4  5  6  7                1  2  3  4
 3  4  5  6  7  8  9       8  9 10 11 12 13 14       5  6  7  8  9 10 11
10 11 12 13 14 15 16      15 16 17 18 19 20 21      12 13 14 15 16 17 18
17 18 19 20 21 22 23      22 23 24 25 26 27 28      19 20 21 22 23 24 25
24 25 26 27 28 29 30      29 30 31                  26 27 28 29 30

        July                     August                  September
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
                1  2          1  2  3  4  5  6                   1  2  3
 3  4  5  6  7  8  9       7  8  9 10 11 12 13       4  5  6  7  8  9 10
10 11 12 13 14 15 16      14 15 16 17 18 19 20      11 12 13 14 15 16 17
17 18 19 20 21 22 23      21 22 23 24 25 26 27      18 19 20 21 22 23 24
24 25 26 27 28 29 30      28 29 30 31               25 26 27 28 29 30
31

      October                   November                  December
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
                   1             1  2  3  4  5                   1  2  3
 2  3  4  5  6  7  8       6  7  8  9 10 11 12       4  5  6  7  8  9 10
 9 10 11 12 13 14 15      13 14 15 16 17 18 19      11 12 13 14 15 16 17
16 17 18 19 20 21 22      20 21 22 23 24 25 26      18 19 20 21 22 23 24
23 24 25 26 27 28 29      27 28 29 30               25 26 27 28 29 30 31

#TO PRINT PARTICULAR MONTH IN THE CALENDAR
print("Particular month:")
print(calendar.month(2023,6))
OUTPUT:
particular month
    August 2023
Mo Tu We Th Fr Sa Su
    1  2  3  4  5  6
 7  8  9 10 11 12 13
14 15 16 17 18 19 20
21 22 23 24 25 26 27
28 29 30 31


#TO SET FIRST DAY IN A WEEK
print("First day of the week as Sunday:")
calendar.setfirstweekday(calendar.SUNDAY)
print(calendar.month(2023,1))
OUTPUT:
set first day of the week
     July 2023
Fr Sa Su Mo Tu We Th
    1  2  3  4  5  6
 7  8  9 10 11 12 13
14 15 16 17 18 19 20
21 22 23 24 25 26 27
28 29 30 31


#Datetime module
import dateime
a=dateime.dateime.now()
print(a)
sv=a.strftime("%y") #lower case
fv=a.strftime("%Y") #upper case
print("year short version:",sv)
print("year full version:",fv)
Output:
2023-02-03 10:44:35.689526
year short version: 23
year full version: 2023

#FUNCTIONS

def sample():
    print("great day")
    print("happy time")
sample()
print("Today")
sample()
Output:
great day
happy time
Today
great day
happy time

#function without arugment and without return value
def multi():
    n1=int(input("Number1:"))
    n2=int(input("Number2:"))
    n3=int(input("Number3:"))
    prod=n1*n2*n3
    print(prod)
multi()
Output:
Number1:4
Number2:5
Number3:6
120

#function without arugment and with return value
def multi():
    n1=int(input("Number1:"))
    n2=int(input("Number2:"))
    n3=int(input("Number3:"))
    prod=n1*n2*n3
    return prod
print(multi())
Output:
Number1:1
Number2:2
Number3:3
6

#function with arugment and without return value
def multi(n1,n2,n3):
    prod=n1*n2*n3
    print(prod)
multi(1,2,3)
Output:
6

#function with arugment and with return value
def multi(n1,n2,n3):
    prod=n1*n2*n3
    return prod
print(multi(3,4,5))
Output:
60

PROGRAMS ON FUNCTIONS:

#Lemons program using functions type 1
def lemon():
    n=int(input("No of lemons:"))
    if n<21:
        print("Less by ",21-n," lemons")
    elif n>21:
        print("Excessive by ",n-21," lemons")
    else:
        print("There are correct number of lemons")
lemon()
Output:
No of lemons:43
Excessive by  22  lemons

#Find factors of the given number using functions type 2
def factors():
    x=int(input("Number:"))
    i=1
    l=[]
    for i in range(1, x + 1):
       if x % i == 0:
           l.append(i)
    return l
print("Factor:",factors())
Output:
Number:45
Factor: [1, 3, 5, 9, 15, 45]

#Print multiplication table for the given number using functions type 3
def multable(m):
    for i in range(1,11):
        print(m,"x",i,"=",i*m)
m=int(input("Number:"))
multable(m)
Output:
Number:3
3 x 1 = 3
3 x 2 = 6
3 x 3 = 9
3 x 4 = 12
3 x 5 = 15
3 x 6 = 18
3 x 7 = 21
3 x 8 = 24
3 x 9 = 27
3 x 10 = 30

#Find out sum of digits of given number using functions type 4
def sumofdigits(a):
    sum=0
    while a>0:
        sum=sum+a%10
        a=a//10
    return sum

n1=int(input("Number:"))
print("Sum of digits:",sumofdigits(n1))
Output:
Number:746
Sum of digits: 17

PROGRAMS ON RECURSION:
#Factorial program using recursion
def factorial(n1):
    if n1==0:
        return 1
    return n1*factorial(n1-1)
n1=int(input("Number:"))
print(factorial(n1))
Output:
Number:5
120
'''
n=5
fact(5)		
n!=0--> 5*fact(4)-->5*24=120

fact(4)
n!=0--> 4*fact(3)-->4*6=24

fact(3)
n!=0--> 3*fact(2)-->3*2=6

fact(2)
n!=0--> 2*fact(1)-->2*1=2

fact(1)
n!=0--> 1*fact(0)-->1*1=1

fact(0)
n==0-->1
'''
#Function that returns more values 
#add&sub of 2 no's in one function
def add_sub(x,y):
    sub=x-y
    add=x+y
    return add,sub
res1=add_sub(20,10)
res2=add_sub(20,10)
print(res1)
print(res2)
Output:
(30,10)
(310,290)

#Function with variable length argument.
def sum(*a):
    c=0
    for i in a:
        c+=i
    print(c)
sum(10,1,2,3,1,2)
Output:
19